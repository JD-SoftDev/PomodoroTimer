@using PomodoroTimer.Models
@using PomodoroTimer.Services

@if (showCompleteTaskDiag)
{
    <h3>Current Task Completed?</h3>
    <button @onclick="TaskCompletedButtonClicked">Yes</button>
}

<RadzenRow class="rz-background-color-base-400 rz-border-radius-6 rz-p-4 rz-mt-5">
    <RadzenColumn Size="6">
    @if (todoList.Any())
    {
        foreach (var task in todoList)
        {
            
             <TaskListItemComponent Task="task" OnRemoveButtonClicked="RemoveTaskButtoClicked" OnMoveToTopButtonClicked="MoveToTopButtonClicked"></TaskListItemComponent>
            
        }

    }
    </RadzenColumn>
    <RadzenColumn Size="6">
        <TaskFormComponent OnFormSubmitted="AddTask"></TaskFormComponent>
    </RadzenColumn>
    

</RadzenRow>



@code {
    private bool showCompleteTaskDiag = false;
    [Inject] private IPomodoroTaskManagerService _taskService { get; set; }
    private IEnumerable<PomodoroTimerTask> todoList = new List<PomodoroTimerTask>();

    private void AddTask(TaskForm taskForm)
    {
        var newTask = new PomodoroTimerTask()
            {
                Name = taskForm.Name,
                NumberOfPomodorosToComplete = taskForm.EstNumPomodoros
            };

        _taskService.AddTask(newTask);
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }

    private void RemoveTaskButtoClicked(PomodoroTimerTask task)
    {
        _taskService.RemoveTask(task);
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }

    private void MoveToTopButtonClicked(PomodoroTimerTask task)
    {
        _taskService.MoveItem(task, 0);
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }

    public void HandlePomodoroCompleted(TimerFinishedDialogResult timerFinishedDialog)
    {
        _taskService.PomodoroCompleted();
        if(timerFinishedDialog.TaskCompleted)
        {
            _taskService.TaskCompleted();
        }
        //showCompleteTaskDiag = _taskService.GetCurrentTask().CurrentNumberOfPomodoros >= _taskService.GetCurrentTask().NumberOfPomodorosToComplete;
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }

    private void TaskCompletedButtonClicked()
    {
        _taskService.TaskCompleted();
        //showCompleteTaskDiag = _taskService.GetCurrentTask()?.CurrentNumberOfPomodoros >= _taskService.GetCurrentTask()?.NumberOfPomodorosToComplete;
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }
}
