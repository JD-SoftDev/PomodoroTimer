@using PomodoroTimer.Models
@using PomodoroTimer.Services

@if (showCompleteTaskDiag)
{
    <h3>Current Task Completed?</h3>
    <button @onclick="TaskCompletedButtonClicked">Yes</button>
}

<h3>Task List</h3>
<TaskFormComponent OnFormSubmitted="AddTask"></TaskFormComponent>
@if (todoList.Any())
{
    foreach(var task in todoList)
    {
        <TaskListItemComponent Task="task" OnRemoveButtonClicked="RemoveTaskButtoClicked" OnMoveToTopButtonClicked="MoveToTopButtonClicked"></TaskListItemComponent>
    }
    
}

@code {
    private bool showCompleteTaskDiag = false;
    [Inject] private IPomodoroTaskManagerService _taskService { get; set; }
    private IEnumerable<PomodoroTimerTask> todoList = new List<PomodoroTimerTask>();

    private void AddTask(TaskForm taskForm)
    {
        var newTask = new PomodoroTimerTask()
            {
                Name = taskForm.Name,
                NumberOfPomodorosToComplete = taskForm.EstNumPomodoros
            };

        _taskService.AddTask(newTask);
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }

    private void RemoveTaskButtoClicked(PomodoroTimerTask task)
    {
        _taskService.RemoveTask(task);
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }

    private void MoveToTopButtonClicked(PomodoroTimerTask task)
    {
        _taskService.MoveItem(task, 0);
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }

    public void HandlePomodoroCompleted()
    {
        _taskService.PomodoroCompleted();
        showCompleteTaskDiag = _taskService.GetCurrentTask().CurrentNumberOfPomodoros >= _taskService.GetCurrentTask().NumberOfPomodorosToComplete;
        todoList = _taskService.GetToDoList();
        StateHasChanged();
    }

    private void TaskCompletedButtonClicked()
    {
        _taskService.TaskCompleted();
        showCompleteTaskDiag = _taskService.GetCurrentTask()?.CurrentNumberOfPomodoros >= _taskService.GetCurrentTask()?.NumberOfPomodorosToComplete;
        StateHasChanged();
    }
}
